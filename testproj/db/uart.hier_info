|uart
CLOCK_50 => TX:C1.CLK
CLOCK_50 => LEDG[0]~reg0.CLK
CLOCK_50 => LEDG[1]~reg0.CLK
CLOCK_50 => LEDG[2]~reg0.CLK
CLOCK_50 => LEDG[3]~reg0.CLK
CLOCK_50 => LEDG[4]~reg0.CLK
CLOCK_50 => LEDG[5]~reg0.CLK
CLOCK_50 => LEDG[6]~reg0.CLK
CLOCK_50 => LEDG[7]~reg0.CLK
CLOCK_50 => TX_START.CLK
CLOCK_50 => TX_DATA[0].CLK
CLOCK_50 => TX_DATA[1].CLK
CLOCK_50 => TX_DATA[2].CLK
CLOCK_50 => TX_DATA[3].CLK
CLOCK_50 => TX_DATA[4].CLK
CLOCK_50 => TX_DATA[5].CLK
CLOCK_50 => TX_DATA[6].CLK
CLOCK_50 => TX_DATA[7].CLK
CLOCK_50 => RX:C2.CLK
SW[0] => TX_DATA[0].DATAIN
SW[1] => TX_DATA[1].DATAIN
SW[2] => TX_DATA[2].DATAIN
SW[3] => TX_DATA[3].DATAIN
SW[4] => TX_DATA[4].DATAIN
SW[5] => TX_DATA[5].DATAIN
SW[6] => TX_DATA[6].DATAIN
SW[7] => TX_DATA[7].DATAIN
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => process_1.IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] <= LEDR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= LEDR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= LEDR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= LEDR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= LEDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= LEDR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= LEDR[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= LEDR[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= <GND>
LEDR[9] <= <GND>
LEDG[0] <= LEDG[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] <= LEDG[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[2] <= LEDG[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[3] <= LEDG[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[4] <= LEDG[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[5] <= LEDG[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[6] <= LEDG[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[7] <= LEDG[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
UART_TXD <= TX:C1.TX_LINE
HEX0[0] <= leddcd:hex0decoder.segments_out[0]
HEX0[1] <= leddcd:hex0decoder.segments_out[1]
HEX0[2] <= leddcd:hex0decoder.segments_out[2]
HEX0[3] <= leddcd:hex0decoder.segments_out[3]
HEX0[4] <= leddcd:hex0decoder.segments_out[4]
HEX0[5] <= leddcd:hex0decoder.segments_out[5]
HEX0[6] <= leddcd:hex0decoder.segments_out[6]
HEX1[0] <= leddcd:hex1decoder.segments_out[0]
HEX1[1] <= leddcd:hex1decoder.segments_out[1]
HEX1[2] <= leddcd:hex1decoder.segments_out[2]
HEX1[3] <= leddcd:hex1decoder.segments_out[3]
HEX1[4] <= leddcd:hex1decoder.segments_out[4]
HEX1[5] <= leddcd:hex1decoder.segments_out[5]
HEX1[6] <= leddcd:hex1decoder.segments_out[6]
UART_RXD => RX:C2.RX_LINE


|uart|leddcd:hex0decoder
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[2] => segments_out.IN0
data_in[2] => segments_out.IN0
data_in[2] => segments_out.IN0
data_in[2] => segments_out.IN0
data_in[3] => segments_out.IN1
data_in[3] => segments_out.IN1
data_in[3] => segments_out.IN1
data_in[3] => segments_out.IN1
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|uart|leddcd:hex1decoder
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[0] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[1] => segments_out.IN1
data_in[2] => segments_out.IN0
data_in[2] => segments_out.IN0
data_in[2] => segments_out.IN0
data_in[2] => segments_out.IN0
data_in[3] => segments_out.IN1
data_in[3] => segments_out.IN1
data_in[3] => segments_out.IN1
data_in[3] => segments_out.IN1
segments_out[0] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[1] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[2] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[3] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[4] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[5] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE
segments_out[6] <= segments_out.DB_MAX_OUTPUT_PORT_TYPE


|uart|TX:C1
CLK => INDEX[0].CLK
CLK => INDEX[1].CLK
CLK => INDEX[2].CLK
CLK => INDEX[3].CLK
CLK => TX_LINE~reg0.CLK
CLK => PRSCL[0].CLK
CLK => PRSCL[1].CLK
CLK => PRSCL[2].CLK
CLK => PRSCL[3].CLK
CLK => PRSCL[4].CLK
CLK => PRSCL[5].CLK
CLK => PRSCL[6].CLK
CLK => PRSCL[7].CLK
CLK => PRSCL[8].CLK
CLK => PRSCL[9].CLK
CLK => PRSCL[10].CLK
CLK => PRSCL[11].CLK
CLK => PRSCL[12].CLK
CLK => DATAFLL[0].CLK
CLK => DATAFLL[1].CLK
CLK => DATAFLL[2].CLK
CLK => DATAFLL[3].CLK
CLK => DATAFLL[4].CLK
CLK => DATAFLL[5].CLK
CLK => DATAFLL[6].CLK
CLK => DATAFLL[7].CLK
CLK => DATAFLL[8].CLK
CLK => DATAFLL[9].CLK
CLK => BUSY~reg0.CLK
CLK => TX_FLG.CLK
START => process_0.IN1
BUSY <= BUSY~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[0] => DATAFLL[1].DATAIN
DATA[1] => DATAFLL[2].DATAIN
DATA[2] => DATAFLL[3].DATAIN
DATA[3] => DATAFLL[4].DATAIN
DATA[4] => DATAFLL[5].DATAIN
DATA[5] => DATAFLL[6].DATAIN
DATA[6] => DATAFLL[7].DATAIN
DATA[7] => DATAFLL[8].DATAIN
TX_LINE <= TX_LINE~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart|RX:C2
CLK => DATA[0]~reg0.CLK
CLK => DATA[1]~reg0.CLK
CLK => DATA[2]~reg0.CLK
CLK => DATA[3]~reg0.CLK
CLK => DATA[4]~reg0.CLK
CLK => DATA[5]~reg0.CLK
CLK => DATA[6]~reg0.CLK
CLK => DATA[7]~reg0.CLK
CLK => DATAFLL[0].CLK
CLK => DATAFLL[1].CLK
CLK => DATAFLL[2].CLK
CLK => DATAFLL[3].CLK
CLK => DATAFLL[4].CLK
CLK => DATAFLL[5].CLK
CLK => DATAFLL[6].CLK
CLK => DATAFLL[7].CLK
CLK => DATAFLL[8].CLK
CLK => DATAFLL[9].CLK
CLK => RX_FLG.CLK
CLK => BUSY~reg0.CLK
CLK => PRSCL[0].CLK
CLK => PRSCL[1].CLK
CLK => PRSCL[2].CLK
CLK => PRSCL[3].CLK
CLK => PRSCL[4].CLK
CLK => PRSCL[5].CLK
CLK => PRSCL[6].CLK
CLK => PRSCL[7].CLK
CLK => PRSCL[8].CLK
CLK => PRSCL[9].CLK
CLK => PRSCL[10].CLK
CLK => PRSCL[11].CLK
CLK => PRSCL[12].CLK
CLK => INDEX[0].CLK
CLK => INDEX[1].CLK
CLK => INDEX[2].CLK
CLK => INDEX[3].CLK
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => DATAFLL.DATAB
RX_LINE => process_0.IN1
DATA[0] <= DATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[1] <= DATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[2] <= DATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[3] <= DATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[4] <= DATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[5] <= DATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[6] <= DATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA[7] <= DATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
BUSY <= BUSY~reg0.DB_MAX_OUTPUT_PORT_TYPE


